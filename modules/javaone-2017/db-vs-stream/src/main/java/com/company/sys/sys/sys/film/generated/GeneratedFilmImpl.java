package com.company.sys.sys.sys.film.generated;

import com.company.sys.sys.sys.film.Film;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;
import java.util.Objects;
import java.util.Optional;
import java.util.OptionalInt;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.company.sys.sys.sys.film.Film}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedFilmImpl implements Film {
    
    private long id;
    private String name;
    private Integer score;
    private Integer level;
    
    protected GeneratedFilmImpl() {
        
    }
    
    @Override
    public long getId() {
        return id;
    }
    
    @Override
    public Optional<String> getName() {
        return Optional.ofNullable(name);
    }
    
    @Override
    public OptionalInt getScore() {
        return OptionalUtil.ofNullable(score);
    }
    
    @Override
    public OptionalInt getLevel() {
        return OptionalUtil.ofNullable(level);
    }
    
    @Override
    public Film setId(long id) {
        this.id = id;
        return this;
    }
    
    @Override
    public Film setName(String name) {
        this.name = name;
        return this;
    }
    
    @Override
    public Film setScore(Integer score) {
        this.score = score;
        return this;
    }
    
    @Override
    public Film setLevel(Integer level) {
        this.level = level;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "    + Objects.toString(getId()));
        sj.add("name = "  + Objects.toString(OptionalUtil.unwrap(getName())));
        sj.add("score = " + Objects.toString(OptionalUtil.unwrap(getScore())));
        sj.add("level = " + Objects.toString(OptionalUtil.unwrap(getLevel())));
        return "FilmImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Film)) { return false; }
        final Film thatFilm = (Film)that;
        if (this.getId() != thatFilm.getId()) {return false; }
        if (!Objects.equals(this.getName(), thatFilm.getName())) {return false; }
        if (!Objects.equals(this.getScore(), thatFilm.getScore())) {return false; }
        if (!Objects.equals(this.getLevel(), thatFilm.getLevel())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Long.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getName());
        hash = 31 * hash + Objects.hashCode(getScore());
        hash = 31 * hash + Objects.hashCode(getLevel());
        return hash;
    }
}